version: '3.4'

services:
  db:
    image: postgres:${DB_VER}
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - ./data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -q -U ${DB_USER} -d ${DB_PATH}"]
      interval: 1s
      timeout: 10s

  scp-backend:
    build:
      context: .
      dockerfile: ./Dockerfile
      target: base
    volumes:
      - ./src:/app/src
      - ./version.txt:/app/version.txt
      - ./logs:/app/logs
    environment:
      DB_URL: postgresql://${DB_USER}:${DB_PASSWORD}@${DB_HOST}:${DB_PORT}/${DB_PATH}
    depends_on:
      db:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:80/ping -o /dev/null"]
      interval: 1s
      timeout: 10s
    links:
      - db:database
    ports:
      - 443:443
      - 80:80
    command: sh -c "npm run ${ENV}"
  
  scp-react-dev:
    build:
      context: react-app/
      dockerfile: react-app/Dockerfile
      target: base
    volumes:
      - ./react-app:/app
      - ./logs:/app/logs
    depends_on:
      scp-backend:
        condition: service_healthy
    ports:
      - 3000:3000
    command: sh -c "npm run react-${ENV}"

